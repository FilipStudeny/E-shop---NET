@page "/orders/order/{OrderId:int}"
@using Eshop.Shared.Models.Order
@inject IOrderService OrderService

<div class="section-header d-flex flex-row justify-content-evenly align-items-center">
    <h2 class="text-center">Order #@OrderId</h2>
</div>

@if (_order == null)
{
    <div class="text-center">
        <h3>Loading order ...</h3>
    </div>
}
else
{
    <div class="orders-container mb-3">
        @foreach (var product in _order.Products)
        {
            <div class="container p-2">
                <div class="image-wrapper mx-2">
                    <img src="@product.Image" alt="@product.Title"/>
                </div>
                <div class="order-details">
                    <div>
                        <a class="product-title text-decoration-none" href="/product/@product.Id">@product.Title</a>
                        <div class="d-flex flex-column justify-content-start">
                            <p>Type: <span class="fw-bold">@product.ProductType</span></p>
                            <p>Quantity: <span class="fw-bold">@product.Quantity</span> </p>
                        </div>
                    </div>
                    <h2 class="product-price">$@product.TotalPrice</h2>
                </div>
            </div>
        }
        <div class="order-price d-flex flex-row justify-content-between align-items-center mt-5 p-2">
            <h4 class="text-center">Order from <span class="fw-bold">@_order.OrderDate.Day.ToString("D2")/@_order.OrderDate.Month.ToString("D2")/@_order.OrderDate.Year</span></h4>
            <h4 class="mx-2">Total: <span class="fw-bold">$@_order.TotalPrice</span></h4>
        </div>
    </div>
}


@code {
    [Parameter] public int OrderId { get; set; }
    OrderDetailDto _order = null;

    protected override async Task OnInitializedAsync()
    {
        var response = await OrderService.GetOrderDetails(OrderId);
        _order = response;
    }

}