@page "/admin/products"
@inject IProductService ProductService
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Admin")]

<div class="section-header">
    <h2 class="text-center">Products</h2>
</div>

@if (ProductService.AdminProducts == null)
{
    <div>
        <h2>Loading products...</h2>
    </div>
}
else
{
    <button class="btn btn-primary float-end" @onclick="CreateProduct">
        <i class="oi oi-plus"></i>
    </button>
    <table class="table">
        <thead>
        <tr>
            <th>Id</th>
            <th>Product</th>
            <th>Variant</th>
            <th>Visible</th>
            <th>Price</th>
            <th></th>

        </tr>
        </thead>
        <tbody>
        <Virtualize Items="@ProductService.AdminProducts"  Context="_product" ItemSize="10">
            <tr>
                <td>
                    @if (!string.IsNullOrEmpty(_product.Image))
                    {
                        <img class="media-img" src="@_product.Image" alt="@_product.Title"/>
                    }
                    else if(_product.Images.Count > 0)
                    {
                        <img class="media-img" src="@_product.Images[0].Data" alt="@_product.Title"/>
                    }                
                </td>
                <td>@_product.Title</td>
                <td>
                    @foreach (var variant in _product.Variants)
                    {
                        <span>@variant.ProductType.Name</span><br/>
                    }
                </td>
                <td>
                    @foreach (var variant in _product.Variants)
                    {
                        <span>@variant.Price</span><br/>
                    }
                </td>
                <td><span>@(_product.Visible ? "\u2714\ufe0f" : "\u274c")</span></td>
                <td>
                    <button class="btn btn-primary" @onclick="(() => EditProduct(_product.Id))">
                        <i class="oi oi-pencil"></i>
                    </button>
                </td>
            </tr>
        </Virtualize>
        </tbody>
    </table>
}

@code {
    
    protected override async Task OnInitializedAsync()
    {
        await ProductService.GetAdminProducts();
    }

    private void EditProduct(int id)
    {
        NavigationManager.NavigateTo($"admin/product/{id}");
    }

    private void CreateProduct()
    {
        NavigationManager.NavigateTo($"admin/product");
    }



}