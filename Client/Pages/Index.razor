@page "/"
@page "/{category}"
@page "/search/{search}/{page:int}"

@inject IProductService ProductService
@inject IBookService BookService

<PageTitle>E-shop</PageTitle>

@if (Category == null && Search == null)
{
    <FeaturedBooks/>
}
else
{
    <ProductList/>
}


@code
{
    //Lifecycle methods
    [Parameter] public string Category { get; set; } = string.Empty;
    [Parameter] public string Search { get; set; } = string.Empty;
    [Parameter] public int Page { get; set; } = 1;

    //Changes products based on selected category,
    //product list listens for action change and subscribes to it, if call is invoked it changes aand display proper data
    protected override async Task OnParametersSetAsync()
    {
        if (Search != null)
        {
            await ProductService.SearchProducts(Search, Page);
            await BookService.SearchForBooks(Search, Page);
        }
        else
        {
            await ProductService.GetProducts(Category);
            await BookService.GetFeaturedBooks();
        }
    }
}
