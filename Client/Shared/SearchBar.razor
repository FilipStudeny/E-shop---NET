@inject NavigationManager NavigationManager
@inject IBookService BookService

<div class="input-group mx-2">
    <input @bind-value="searchString" @bind-value:event="oninput" type="search" list="books" @onkeyup="HandleSearch"
           class="form-control" placeholder="Search for books ..." @ref="inputSearch" />
    <datalist id="books">
        @if(suggestions != null && suggestions.Count != 0)
        {
            foreach (var suggestion in suggestions)
            {
                <option>@suggestion</option>
            }
        }
        
    </datalist>
    <div class="input-group-append">
        <button class="btn btn-primary"><span class="oi oi-magnifying-glass"></span></button>
    </div>
</div>


@code {
    private string searchString = string.Empty;
    private List<string> suggestions;
    protected ElementReference inputSearch;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await inputSearch.FocusAsync();
        }
    }

    private void SearchForBooks()
    {
        NavigationManager.NavigateTo($"/search/{searchString}/1");
    }

    public async Task HandleSearch(KeyboardEventArgs args)
    {
        if (args.Key is null or "Enter")
        {
            SearchForBooks();
        }
        else if (searchString.Length > 1)
        {
            suggestions = await BookService.GetSuggestedBooks(searchString);
        }
    }
}
